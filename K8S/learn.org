* learn k8s

** check cluster

#+begin_src shell
kubectl version
kubectl cluster-info
kubectl get nodes
#+end_src

** deploy application

#+begin_src shell
kubectl create deployment kubernetes-bootcamp --image=gcr.io/google-samples/kubernetes-bootcamp:v1
kubectl get deployments
kubectl proxy
kubectl get pods
#+end_src

** exploring your app

#+begin_src shell
kubectl get pods
kubectl describe pods
#+end_src

** expose your app publicly

#+begin_src shell
kubectl get services
kubectl expose deployment/kubernetes-bootcamp --type="NodePort" --port 8080
kubectl describe services/kubernetes-bootcamp
export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='{{(index .spec.ports 0).nodePort}}')
echo NODE_PORT=$NODE_PORT
#+end_src

** Scale up your app

#+begin_src shell
kubectl scale deployments/kubernetes-bootcamp --replicas=4
kubectl scale deployments/kubernetes-bootcamp --replicas=2
#+end_src

** Update your app

#+begin_src shell
kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=jocatalin/kubernetes-bootcamp:v2
kubectl rollout status deployments/kubernetes-bootcamp
kubectl set image deployments/kubernetes-bootcamp kubernetes-bootcamp=gcr.io/google-samples/kubernetes-bootcamp:v10  
kubectl rollout undo deployments/kubernetes-bootcamp
#+end_src
